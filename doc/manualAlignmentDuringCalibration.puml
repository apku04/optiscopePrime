@startuml
actor User
participant "Rotary Encoder\n(CLK/DT, SW)" as Encoder #LightYellow
participant "Input Manager" as IM #LightBlue
participant "Event Bus" as EB #LightGreen
participant "Menu System" as Menu
participant "Calibration Controller" as Cal #LightGray
participant "Motor Controller" as MC
participant "Display Manager" as DM

User -> Encoder: Rotate knob to select "Go to Calibration"
Encoder -> IM: GPIO callback (CLK/DT)
IM -> EB: emit("input.menu.rotary_changed", direction)
EB -> Menu: deliver event (update highlight)

User -> Encoder: Press knob (SW)
Encoder -> IM: GPIO callback (SW pressed)
IM -> EB: emit("menu_ok_pressed")
EB -> Menu: deliver event
Menu -> EB: emit("goto_calibration_entered")
EB -> Cal: deliver event

Cal -> EB: emit("auto_homing_started")
EB -> MC: deliver event
MC -> MC: Run homing routine
MC -> EB: emit("homing_complete")
EB -> Cal: deliver event
Cal -> DM: prompt "Align to target: Jupiter"

' (Axis movement phase: using potentiometers or axis encoders)
User -> IM: Move axes using manual controls (pot or encoder)
IM -> EB: emit("pot_changed" or "axis_encoder_changed", axis, value)
EB -> MC: deliver event
MC -> MC: Move motor(s)
EB -> DM: deliver event (optional)
DM -> DM: OLED shows axis/position (optional)

User -> Encoder: Press knob (SW) to confirm alignment
Encoder -> IM: GPIO callback (SW pressed)
IM -> EB: emit("menu_ok_pressed")
EB -> Cal: deliver event (calibration point confirmed)
Cal -> Cal: Record alignment for this target

' Repeat for next calibration target(s), or finish

@enduml
